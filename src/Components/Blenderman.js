/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 blenderman.glb
*/

import React, { useEffect, useRef } from "react";

import { useGLTF, useAnimations } from "@react-three/drei";

function Model(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/blenderman.glb");
  const { actions } = useAnimations(animations, group);
  console.log(nodes.Shoes.geometry.index.itemSize);
  useEffect(() => {
    if (props.action.prev && props.action.curr === 0) {
      actions[props.action.prev].stop();
    }
    if (props.action.prev) {
      actions[props.action.prev].stop();
    }
    if (props.action.curr) {
      actions[props.action.curr].play();
    }
  }, [props.action, actions, props.action.prev]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="Body"
            geometry={nodes.Body.geometry}
            material={materials.Bodymat}
            skeleton={nodes.Body.skeleton}
            material-color={props.bodyColor}
          />
          <skinnedMesh
            name="Bottoms"
            geometry={nodes.Bottoms.geometry}
            material={materials.Bottommat}
            skeleton={nodes.Bottoms.skeleton}
            material-color={props.bottomColor}
          />
          <skinnedMesh
            name="Eyelashes"
            geometry={nodes.Eyelashes.geometry}
            material={materials.Eyelashmat}
            skeleton={nodes.Eyelashes.skeleton}
          />
          <skinnedMesh
            name="Eyes"
            geometry={nodes.Eyes.geometry}
            material={materials.Bodymat}
            skeleton={nodes.Eyes.skeleton}
          />
          <skinnedMesh
            name="Hair"
            geometry={nodes.Hair.geometry}
            material={materials.Hairmat}
            skeleton={nodes.Hair.skeleton}
            material-color={props.hairColor}
          />
          <skinnedMesh
            name="Shoes"
            geometry={nodes.Shoes.geometry}
            material={materials.Shoesmat}
            skeleton={nodes.Shoes.skeleton}
            material-color={props.shoeColor}
          />
          <skinnedMesh
            name="Tops"
            geometry={nodes.Tops.geometry}
            material={materials.Topmat}
            skeleton={nodes.Tops.skeleton}
            material-color={props.topColor}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/blenderman.glb");
export default Model;
